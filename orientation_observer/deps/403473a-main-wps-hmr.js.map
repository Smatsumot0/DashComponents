{"version":3,"sources":["webpack:///./src/lib/components/OrientationObserver.react.js"],"names":["OrientationObserver","props","state","orientation","getOrientation","observer","angle","screen","undefined","window","_this","setProps","addEventListener","before_orientation","setState","id","Component","defaultProps","propTypes","PropTypes","string","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmC;AACI;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOqBA,mBAAmB;EAAA;EAAA;EACpC,6BAAYC,KAAK,EAAE;IAAA;IAAA;IACf,2BAAMA,KAAK;IACX,OAAKC,KAAK,GAAG;MAACC,WAAW,EAAE,OAAKC,cAAc;IAAE,CAAC;IACjD,OAAKC,QAAQ,GAAG,IAAI;IAAC;EACzB;EAAC;IAAA;IAAA,OAED,0BAAiB;MACb,IAAIC,KAAK,GAAGC,MAAM,IAAIA,MAAM,CAACJ,WAAW,IAAII,MAAM,CAACJ,WAAW,CAACG,KAAK;MACpE,IAAIA,KAAK,KAAKE,SAAS,EAAE;QACrBF,KAAK,GAAGG,MAAM,CAACN,WAAW,CAAC,CAAC;MAChC;;MACA,OAAOG,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,WAAW;IACjD;EAAC;IAAA;IAAA,OAED,6BAAoB;MAAA;MAChB,IAAMI,KAAK,GAAG,IAAI;MAClBA,KAAK,CAACT,KAAK,CAACU,QAAQ,CAAC;QACjBR,WAAW,EAAE,IAAI,CAACC,cAAc;MACpC,CAAC,CAAC;MACFK,MAAM,CAACG,gBAAgB,CAAC,mBAAmB,EAAE,YAAM;QAC/CF,KAAK,CAACT,KAAK,CAACU,QAAQ,CAAC;UACjBR,WAAW,EAAE,MAAI,CAACC,cAAc,EAAE;UAClCS,kBAAkB,EAAE,MAAI,CAACX,KAAK,CAACC;QACnC,CAAC,CAAC;QACFO,KAAK,CAACI,QAAQ,CAAC;UAACX,WAAW,EAAE,MAAI,CAACC,cAAc;QAAE,CAAC,CAAC;MACxD,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OAED,kBAAS;MACL,oBAAO;QAAK,EAAE,EAAE,IAAI,CAACH,KAAK,CAACc;MAAG,EAAO;IACzC;EAAC;EAAA;AAAA,EA/B4CC,+CAAS;AAAlB;AAkCxChB,mBAAmB,CAACiB,YAAY,GAAG,CAAC,CAAC;AAErCjB,mBAAmB,CAACkB,SAAS,GAAG;EAC5BH,EAAE,EAAEI,iDAAS,CAACC,MAAM;EACpBjB,WAAW,EAAEgB,iDAAS,CAACC,MAAM;EAC7BP,kBAAkB,EAAEM,iDAAS,CAACC,MAAM;EACpCT,QAAQ,EAAEQ,iDAAS,CAACE;AACxB,CAAC,C","file":"403473a-main-wps-hmr.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\n\r\n/**\r\n * ExampleComponent is an example component.\r\n * It takes a property, `label`, and\r\n * displays it.\r\n * It renders an input with the property `value`\r\n * which is editable by the user.\r\n */\r\nexport default class OrientationObserver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {orientation: this.getOrientation()};\r\n        this.observer = null;\r\n    }\r\n\r\n    getOrientation() {\r\n        let angle = screen && screen.orientation && screen.orientation.angle;\r\n        if (angle === undefined) {\r\n            angle = window.orientation; // iOSç”¨\r\n        }\r\n        return angle === 0 ? 'portrait' : 'landscape';\r\n    }\r\n\r\n    componentDidMount() {\r\n        const _this = this;\r\n        _this.props.setProps({\r\n            orientation: this.getOrientation(),\r\n        });\r\n        window.addEventListener('orientationchange', () => {\r\n            _this.props.setProps({\r\n                orientation: this.getOrientation(),\r\n                before_orientation: this.state.orientation,\r\n            });\r\n            _this.setState({orientation: this.getOrientation()});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div id={this.props.id}></div>;\r\n    }\r\n}\r\n\r\nOrientationObserver.defaultProps = {};\r\n\r\nOrientationObserver.propTypes = {\r\n    id: PropTypes.string,\r\n    orientation: PropTypes.string,\r\n    before_orientation: PropTypes.string,\r\n    setProps: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}