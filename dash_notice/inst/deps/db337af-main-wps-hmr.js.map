{"version":3,"sources":["webpack:///./src/lib/components/DashNotice.react.js"],"names":["Background","styled","div","Icon","attrs","props","iconColor","Badge","span","color","badgeColor","borderColor","NoticeBOX","position","bgColor","duration","NoticeP","p","NoticeTitle","NoticeMessage","NoticeTime","DashNotice","timeout","Date","getTime","state","isOpen","timestamp","isDisplayed","key","id","remove_timing","deleteTimeout","deleteLength","notices","JSON","parse","sessionStorage","getItem","Array","from","Set","concat","console","log","setProps","sort","open","bind","a","b","newNotices","isDelete","notice","passed","now","push","max_length","length","slice","setInterval","setState","_this","setItem","stringify","value","filter","x","setTimeout","ms","min","Math","floor","hours","days","join","getPassed","select","border_color","title","message","icon_color","badge_color","list","item","display","transform","Component","defaultProps","propTypes","PropTypes","string","isRequired","arrayOf","object","number","oneOfType","func"],"mappings":"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","file":"db337af-main-wps-hmr.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {FaBell} from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\n/* -----------------------------------------------------------\r\n * Style\r\n * -----------------------------------------------------------*/\r\nconst Background = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst Icon = styled.div.attrs((props) => ({\r\n    iconColor: props.iconColor,\r\n}))`\r\n    width: 30px;\r\n    height: 30px;\r\n    position: relative;\r\n\r\n    svg {\r\n        width: 100%;\r\n        height: 100%;\r\n        color: ${(props) => props.iconColor};\r\n    }\r\n`;\r\n\r\nconst Badge = styled.span.attrs((props) => ({\r\n    color: props.color,\r\n    badgeColor: props.badgeColor,\r\n    borderColor: props.borderColor,\r\n}))`\r\n    width: 1.2em;\r\n    height: 1.2em;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0;\r\n    right: -0.3em;\r\n    background-color: ${(props) => props.badgeColor};\r\n    border-radius: 50%;\r\n    border: solid 2px ${(props) => props.borderColor};\r\n    color: ${(props) => props.color};\r\n    font-size: 0.7em;\r\n    line-height: 1;\r\n    box-sizing: content-box;\r\n`;\r\n\r\nconst NoticeBOX = styled.div.attrs((props) => ({\r\n    position: props.position,\r\n    bgColor: props.bgColor,\r\n    borderColor: props.borderColor,\r\n    duration: props.duration,\r\n}))`\r\n    position: absolute;\r\n    top: 50%;\r\n    ${(props) => props.position}: 50%;\r\n    transform-origin: top right;\r\n    transition: transform ${(props) => props.duration}ms;\r\n    padding-top: calc(50% + 10px);\r\n\r\n    ul {\r\n      height: 300px;\r\n      overflow-y: scroll;\r\n      margin: 0;\r\n      margin-${(props) => props.position}: -10px;\r\n      padding: 5px 0;\r\n      list-style: none;\r\n      background-color: ${(props) => props.bgColor};\r\n      color: ${(props) => props.color};\r\n      border: solid 2px ${(props) => props.borderColor};\r\n      border-radius: 10px;\r\n      // scroll\r\n      -ms-overflow-style: none;\r\n      scrollbar-width: none;\r\n      &::-webkit-scrollbar{\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    li {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 5px 10px;\r\n\r\n        &:not(:first-of-type) {\r\n            border-top: solid thin ${(props) => props.borderColor};\r\n        }\r\n    }\r\n`;\r\n\r\nconst NoticeP = styled.p`\r\n    margin: 0;\r\n    line-height: 1;\r\n`;\r\n\r\nconst NoticeTitle = styled(NoticeP).attrs((props) => {\r\n    color: props.color;\r\n})`\r\n    color: ${(props) => props.color};\r\n    font-size: 0.85em;\r\n`;\r\n\r\nconst NoticeMessage = styled(NoticeP)`\r\n    width: 10em;\r\n    padding: 10px 0 10px 0.7em;\r\n`;\r\n\r\nconst NoticeTime = styled(NoticeP).attrs((props) => {\r\n    color: props.color;\r\n})`\r\n    color: ${(props) => props.color};\r\n    font-size: 0.7em;\r\n    margin-left: auto;\r\n`;\r\n\r\n/* -----------------------------------------------------------\r\n * Component\r\n * -----------------------------------------------------------*/\r\nexport default class DashNotice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const timeout =\r\n            new Date('2000/1/1 ' + this.props.timeout).getTime() -\r\n            new Date('2000/1/1 00:00:00').getTime();\r\n        this.state = {isOpen: false, timeout, timestamp: new Date()};\r\n        this.isDisplayed = false;\r\n        this.key = 'dn-' + this.props.id;\r\n\r\n        // delete\r\n        switch (this.props.remove_timing) {\r\n            case 'timeout':\r\n                this.deleteTimeout();\r\n            case 'length':\r\n                this.deleteLength();\r\n        }\r\n\r\n        // set\r\n        let notices = JSON.parse(sessionStorage.getItem(this.key));\r\n        if (!notices) notices = [];\r\n        notices = Array.from(new Set(notices.concat(this.props.notices)));\r\n        console.log(notices);\r\n        this.props.setProps({notices});\r\n        this.sort();\r\n\r\n        // bind\r\n        this.open = this.open.bind(this);\r\n    }\r\n\r\n    /**\r\n     * ソート\r\n     */\r\n    sort() {\r\n        if (this.props.sort === 'asc') {\r\n            this.props.notices.sort((a, b) =>\r\n                a.timestamp > b.timestamp ? 1 : -1\r\n            );\r\n        } else {\r\n            this.props.notices.sort((a, b) =>\r\n                a.timestamp < b.timestamp ? 1 : -1\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 経過時間がtimeoutより大きいものを削除\r\n     */\r\n    deleteTimeout() {\r\n        const {notices, setProps} = this.props;\r\n        const newNotices = [];\r\n        let isDelete = false;\r\n        for (const notice of notices) {\r\n            const passed = Date.now() - new Date(notice.timestamp).getTime();\r\n            if (passed < this.state.timeout) {\r\n                newNotices.push(notice);\r\n            } else {\r\n                isDelete = true;\r\n            }\r\n        }\r\n        if (isDelete) {\r\n            setProps({notices: newNotices});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * max_lengthより多くなった場合、古い方から削除\r\n     */\r\n    deleteLength() {\r\n        const {notices, max_length, setProps} = this.props;\r\n        if (notices.length > max_length) {\r\n            if (this.props.sort === 'asc') {\r\n                setProps({\r\n                    notices: notices.slice(\r\n                        notices.length - max_length,\r\n                        notices.length\r\n                    ),\r\n                });\r\n            } else {\r\n                setProps({notices: notices.slice(0, max_length)});\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sort();\r\n        setInterval(() => {\r\n            this.setState({timestamp: new Date()});\r\n            if (this.props.remove_timing === 'timeout') {\r\n                const _this = this;\r\n                _this.deleteTimeout();\r\n            }\r\n        }, 10000);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.notices.length > 0) {\r\n            // 削除タイミング\r\n            switch (this.props.remove_timing) {\r\n                case 'timeout':\r\n                    this.deleteTimeout();\r\n                    break;\r\n                case 'length':\r\n                    this.deleteLength();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(this.key, JSON.stringify(this.props.notices));\r\n    }\r\n\r\n    /**\r\n     * 通知ボックス開閉\r\n     */\r\n    open() {\r\n        if (this.props.notices.length === 0) {\r\n            this.setState({isOpen: false});\r\n        } else {\r\n            this.setState({isOpen: !this.state.isOpen});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通知アイテムが選択された場合、アイテムのvalueを返す\r\n     * @param {*} value\r\n     */\r\n    select(value) {\r\n        this.props.setProps({value});\r\n        // 該当の通知を削除\r\n        if (this.props.remove_timing === 'check') {\r\n            const newNotices = this.props.notices.filter(\r\n                (x) => x.value !== value\r\n            );\r\n            setTimeout(() => {\r\n                this.props.setProps({notices: newNotices});\r\n            }, this.props.duration + 10);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 経過時間\r\n     * @param {*} timestamp\r\n     * @returns\r\n     */\r\n    getPassed(timestamp) {\r\n        const ms = Date.now() - new Date(timestamp).getTime();\r\n        const min = Math.floor(ms / 1000 / 60) % 60;\r\n        const hours = Math.floor(ms / 1000 / 60 / 60) % 24;\r\n        const days = Math.floor(ms / 1000 / 60 / 60 / 24);\r\n\r\n        const passed = [];\r\n        if (days) passed.push(days + 'days');\r\n        if (hours) passed.push(hours + 'hours');\r\n        if (min) passed.push(min + 'minutes');\r\n        if (passed.length === 0) passed.push('0minutes');\r\n        passed.push('ago');\r\n        return passed.join(' ');\r\n    }\r\n\r\n    /**\r\n     * 通知ボックスのアイテム\r\n     * @param {*} notice データ\r\n     * @returns\r\n     */\r\n    item(notice) {\r\n        const passed = this.getPassed(notice.timestamp);\r\n        return (\r\n            <li\r\n                key={notice.timestamp}\r\n                onClick={() => this.select(notice.value)}\r\n            >\r\n                <NoticeTitle\r\n                    className=\"dn-title\"\r\n                    color={this.props.border_color}\r\n                >\r\n                    {notice.title}\r\n                </NoticeTitle>\r\n                <NoticeMessage className=\"dn-content\">\r\n                    {notice.message}\r\n                </NoticeMessage>\r\n                <NoticeTime className=\"dn-time\" color={this.props.border_color}>\r\n                    {passed}\r\n                </NoticeTime>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            id,\r\n            notices,\r\n            icon_color,\r\n            color,\r\n            badge_color,\r\n            border_color,\r\n            position,\r\n            duration,\r\n        } = this.props;\r\n\r\n        const list = [];\r\n        for (const notice of notices) {\r\n            list.push(this.item(notice));\r\n        }\r\n\r\n        return (\r\n            <div id={id} className=\"dash-notice\">\r\n                <Icon\r\n                    iconColor={icon_color}\r\n                    className=\"dn-icon\"\r\n                    onClick={this.open}\r\n                >\r\n                    <Background\r\n                        style={{display: this.state.isOpen ? 'block' : 'none'}}\r\n                    />\r\n                    <FaBell />\r\n                    <Badge\r\n                        color={icon_color}\r\n                        badgeColor={badge_color}\r\n                        borderColor={color}\r\n                        style={{display: notices.length > 0 ? 'flex' : 'none'}}\r\n                    >\r\n                        {notices.length}\r\n                    </Badge>\r\n                    <NoticeBOX\r\n                        position={position}\r\n                        bgColor={icon_color}\r\n                        color={color}\r\n                        borderColor={border_color}\r\n                        duration={duration}\r\n                        style={{\r\n                            transform:\r\n                                'scale(' + (this.state.isOpen ? 1 : 0) + ')',\r\n                        }}\r\n                    >\r\n                        <ul>{list}</ul>\r\n                    </NoticeBOX>\r\n                </Icon>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashNotice.defaultProps = {\r\n    notices: [],\r\n    remove_timing: 'check',\r\n    max_length: 10,\r\n    timeout: '00:30:00',\r\n    icon_color: 'black',\r\n    color: 'white',\r\n    badge_color: 'red',\r\n    border_color: 'gray',\r\n    position: 'right',\r\n    duration: 300,\r\n    sort: 'desc',\r\n};\r\n\r\nDashNotice.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    notices: PropTypes.arrayOf(PropTypes.object),\r\n    remove_timing: PropTypes.string, // check or timeout or length\r\n    max_length: PropTypes.number,\r\n    timeout: PropTypes.string,\r\n    icon_color: PropTypes.string,\r\n    color: PropTypes.string,\r\n    badge_color: PropTypes.string,\r\n    border_color: PropTypes.string,\r\n    position: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    duration: PropTypes.number,\r\n    sort: PropTypes.string,\r\n    setProps: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}