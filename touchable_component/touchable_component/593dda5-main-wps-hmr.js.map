{"version":3,"sources":["webpack:///./src/lib/components/TouchableComponent.react.js"],"names":["TouchableComponent","props","minDistance","state","active","isActive","setState","e","touches","rect","target","getBoundingClientRect","t","push","x","clientX","left","y","clientY","Up","startPos","targetTouches","endPos","Math","abs","direction","setProps","swipe","children","id","className","updateActive","swipeStart","start_timestamp","timeStamp","swipeEnd","end_timestamp","swipeMove","touchData","Component","defaultProps","propTypes","PropTypes","node","string","n_clicks","number","func"],"mappings":"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","file":"593dda5-main-wps-hmr.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\n/**\r\n * ExampleComponent is an example component.\r\n * It takes a property, `label`, and\r\n * displays it.\r\n * It renders an input with the property `value`\r\n * which is editable by the user.\r\n */\r\nexport default class TouchableComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.minDistance = 100;\r\n        this.state = {active: false};\r\n    }\r\n    updateActive(isActive) {\r\n        this.setState({active: isActive});\r\n    }\r\n    touchData(e) {\r\n        let touches = [];\r\n        const rect = e.target.getBoundingClientRect();\r\n        for (let t of e.touches) {\r\n            touches.push({x: t.clientX - rect.left, y: t.clientY - rect.Up});\r\n        }\r\n        return touches;\r\n    }\r\n    swipeStart(e) {\r\n        this.startPos = {\r\n            x: e.targetTouches[0].clientX,\r\n            y: e.targetTouches[0].clientY,\r\n        };\r\n    }\r\n    swipeMove(e) {\r\n        this.endPos = {\r\n            x: e.targetTouches[0].clientX,\r\n            y: e.targetTouches[0].clientY,\r\n        };\r\n    }\r\n    swipeEnd() {\r\n        const x = this.endPos.x - this.startPos.x;\r\n        const y = this.endPos.y - this.startPos.y;\r\n        if (Math.abs(x) < this.minDistance && Math.abs(y) < this.minDistance) {\r\n            return;\r\n        }\r\n\r\n        // スワイプの方向\r\n        let direction;\r\n        if (Math.abs(x) > Math.abs(y)) {\r\n            direction = x < 0 ? 'left' : 'right';\r\n        } else {\r\n            direction = y < 0 ? 'up' : 'down';\r\n        }\r\n        this.props.setProps({swipe: direction});\r\n    }\r\n    render() {\r\n        const {children, id, className, setProps} = this.props;\r\n        return (\r\n            <div\r\n                id={id}\r\n                className={className + (this.state.active ? ' active' : '')}\r\n                onTouchStart={(e) => {\r\n                    this.updateActive(true);\r\n                    this.swipeStart(e);\r\n                    setProps({start_timestamp: e.timeStamp});\r\n                }}\r\n                onTouchEnd={(e) => {\r\n                    this.updateActive(false);\r\n                    this.swipeEnd();\r\n                    setProps({end_timestamp: e.timeStamp});\r\n                }}\r\n                onTouchMove={(e) => {\r\n                    this.swipeMove(e);\r\n                    setProps({touches: this.touchData(e)});\r\n                }}\r\n                onClick={(e) => setProps({end_timestamp: e.timeStamp})}\r\n                // style={{background: 'red', height: '500px', width: '500px'}}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTouchableComponent.defaultProps = {};\r\n\r\nTouchableComponent.propTypes = {\r\n    children: PropTypes.node,\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    n_clicks: PropTypes.number,\r\n    setProps: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}