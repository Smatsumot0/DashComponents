{"version":3,"sources":["webpack:///./src/lib/components/TouchableComponent.react.js"],"names":["TouchableComponent","props","state","active","isActive","setState","e","touches","rect","target","getBoundingClientRect","t","push","x","clientX","left","y","clientY","Up","console","log","distance","direction","setProps","swipe","children","id","className","updateActive","start_timestamp","timeStamp","end_timestamp","touchData","background","height","width","Component","defaultProps","propTypes","PropTypes","node","string","n_clicks","number","func"],"mappings":"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","file":"3c2ba67-main-wps-hmr.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport Swipeable from 'react-swipeable';\r\n/**\r\n * ExampleComponent is an example component.\r\n * It takes a property, `label`, and\r\n * displays it.\r\n * It renders an input with the property `value`\r\n * which is editable by the user.\r\n */\r\nexport default class TouchableComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {active: false};\r\n    }\r\n    updateActive(isActive) {\r\n        this.setState({active: isActive});\r\n    }\r\n    touchData(e) {\r\n        let touches = [];\r\n        const rect = e.target.getBoundingClientRect();\r\n        for (let t of e.touches) {\r\n            touches.push({x: t.clientX - rect.left, y: t.clientY - rect.Up});\r\n        }\r\n        console.log(touches);\r\n        return touches;\r\n    }\r\n    swipe(distance, direction) {\r\n        distance = distance < 0 ? distance * -1 : distance;\r\n        if (distance > 50) {\r\n            this.setProps({swipe: direction});\r\n        }\r\n    }\r\n    render() {\r\n        const {children, id, className, setProps} = this.props;\r\n        return (\r\n            <Swipeable\r\n                id={id}\r\n                className={className + (this.state.active ? ' active' : '')}\r\n                onTouchStart={(e) => {\r\n                    this.updateActive(true);\r\n                    setProps({start_timestamp: e.timeStamp});\r\n                }}\r\n                onTouchEnd={(e) => {\r\n                    this.updateActive(false);\r\n                    setProps({end_timestamp: e.timeStamp});\r\n                }}\r\n                onTouchMove={(e) => setProps({touches: this.touchData(e)})}\r\n                onClick={(e) => setProps({end_timestamp: e.timeStamp})}\r\n                onSwipedUp={() => setProps({swipe: 'up'})}\r\n                onSwipedDown={() => setProps({swipe: 'down'})}\r\n                onSwipedLeft={() => setProps({swipe: 'left'})}\r\n                onSwipedRight={() => setProps({swipe: 'right'})}\r\n                style={{background: 'red', height: '500px', width: '500px'}}\r\n            >\r\n                <div\r\n                    style={{\r\n                        background: 'blue',\r\n                        height: '300px',\r\n                        width: '300px',\r\n                    }}\r\n                >\r\n                    {children}\r\n                </div>\r\n            </Swipeable>\r\n        );\r\n    }\r\n}\r\n\r\nTouchableComponent.defaultProps = {};\r\n\r\nTouchableComponent.propTypes = {\r\n    children: PropTypes.node,\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    n_clicks: PropTypes.number,\r\n    setProps: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}