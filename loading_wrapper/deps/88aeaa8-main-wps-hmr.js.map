{"version":3,"sources":["webpack:///./src/lib/components/LoadingWrapper.react.js"],"names":["LoadingWrapper","props","ref","React","createRef","state","isLoading","interval","mo","stop","MutationObserver","mutations","mutation","console","log","id","setLoading","isTarget","addedNodes","removedNodes","observe","current","childList","attributes","characterData","subtree","disconnect","nodes","node","tagName","className","split","indexOf","targetClassName","target","querySelector","ignores","ignore","ignoreTarget","style","length","setProps","is_loading","setState","setInterval","clearInterval","isIgnore","result","closest","parentElement","children","Component","defaultProps","propTypes","PropTypes","string","isRequired","number","arrayOf","func"],"mappings":"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","file":"88aeaa8-main-wps-hmr.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\n\r\n/**\r\n * ExampleComponent is an example component.\r\n * It takes a property, `label`, and\r\n * displays it.\r\n * It renders an input with the property `value`\r\n * which is editable by the user.\r\n */\r\nexport default class LoadingWrapper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n        this.state = {isLoading: false};\r\n        this.interval = null;\r\n        this.mo = null;\r\n        this.stop = false;\r\n    }\r\n    /**\r\n     * コンポーネントがマウントされる直前に呼び出される\r\n     */\r\n    componentDidMount() {\r\n        this.mo = new MutationObserver((mutations) => {\r\n            for (const mutation of mutations) {\r\n                // this.checkIgnore(mutation.target);\r\n                // if (!this.stop) {\r\n                const isLoading = this.isLoading();\r\n                console.log(this.props.id, 'is loading', isLoading);\r\n                if (isLoading === null) continue;\r\n                this.setLoading(isLoading);\r\n                break;\r\n                if (this.isTarget(mutation.addedNodes)) {\r\n                    this.setLoading(true);\r\n                    break;\r\n                }\r\n                if (this.isTarget(mutation.removedNodes)) {\r\n                    this.setLoading(false);\r\n                    break;\r\n                }\r\n                // }\r\n            }\r\n        });\r\n        this.mo.observe(this.ref.current, {\r\n            childList: true,\r\n            attributes: true,\r\n            characterData: true,\r\n            subtree: true,\r\n        });\r\n    }\r\n    /**\r\n     * コンポーネント破棄直前に呼び出される\r\n     */\r\n    componentWillUnmount() {\r\n        if (this.mo) this.mo.disconnect();\r\n    }\r\n    /**\r\n     * ロードの基準となるターゲットか判定\r\n     * @param {*} nodes\r\n     * @returns\r\n     */\r\n    isTarget(nodes) {\r\n        for (const node of nodes) {\r\n            if (!node.tagName) continue;\r\n            if (!node.className) continue;\r\n            if (\r\n                node.className\r\n                    .split(' ')\r\n                    .indexOf(this.props.targetClassName) !== -1\r\n            ) {\r\n                console.log(this.props.id, node);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * ロード中か判定\r\n     * @returns\r\n     */\r\n    isLoading() {\r\n        // console.log(\r\n        //     this.props.id,\r\n        //     'check',\r\n        //     this.ref.current.querySelector('.' + this.props.targetClassName)\r\n        // );\r\n        // return !!this.ref.current.querySelector(\r\n        //     '.' + this.props.targetClassName\r\n        // );\r\n        const target = this.ref.current.querySelector('.loading');\r\n        if (this.props.ignores) {\r\n            for (const ignore of this.props.ignores) {\r\n                const ignoreTarget = this.ref.current.querySelector(\r\n                    '[data-loading_ignore=' + ignore + '] .loading'\r\n                );\r\n                if (ignoreTarget && ignoreTarget.style.length > 0) return null;\r\n            }\r\n        }\r\n        return target.style.length > 0;\r\n    }\r\n    /**\r\n     * ロード状態をstateとpropsに設定\r\n     * @param {*} isLoading\r\n     */\r\n    setLoading(isLoading) {\r\n        if (isLoading) {\r\n            console.log(this.props.id, 'start');\r\n            this.props.setProps({is_loading: true});\r\n            this.setState({isLoading: true});\r\n            if (!this.interval) {\r\n                this.interval = setInterval(() => {\r\n                    if (!this.isLoading()) {\r\n                        console.log(this.props.id, 'end');\r\n                        clearInterval(this.interval);\r\n                        this.interval = null;\r\n                        this.props.setProps({is_loading: false});\r\n                        this.setState({isLoading: false});\r\n                    }\r\n                }, this.props.interval);\r\n            }\r\n        }\r\n    }\r\n    checkIgnore(target) {\r\n        if (this.stop) return;\r\n        if (this.isIgnore(target)) {\r\n            this.stop = true;\r\n            if (!this.interval) {\r\n                this.interval = setInterval(() => {\r\n                    if (!this.isLoading()) {\r\n                        clearInterval(this.interval);\r\n                        this.interval = null;\r\n                        this.stop = false;\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 除外コンテンツ判定\r\n     * @param {*} target\r\n     * @returns\r\n     */\r\n    isIgnore(target) {\r\n        if (this.props.ignores) {\r\n            for (const ignore of this.props.ignores)\r\n                try {\r\n                    const result = target.closest(\r\n                        '[data-loading_ignore=' + ignore + ']'\r\n                    );\r\n                    if (result) return true;\r\n                } catch {\r\n                    const result = target.parentElement.closest(\r\n                        '[data-loading_ignore=' + ignore + ']'\r\n                    );\r\n                    if (result) return true;\r\n                }\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n        const {id, className, children} = this.props;\r\n        return (\r\n            <div\r\n                id={id}\r\n                className={\r\n                    'loading_wrapper ' +\r\n                    className +\r\n                    ' loading_' +\r\n                    this.state.isLoading\r\n                }\r\n                ref={this.ref}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLoadingWrapper.defaultProps = {\r\n    interval: 1000,\r\n};\r\n\r\nLoadingWrapper.propTypes = {\r\n    children: PropTypes.node,\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    targetClassName: PropTypes.string.isRequired,\r\n    interval: PropTypes.number,\r\n    ignores: PropTypes.arrayOf(PropTypes.string),\r\n    setProps: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}